{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Витяги значень змінних\nlet userSelectedDate = '';\nlet timeInMs = '';\n\n// Об\"єкт flatpickr\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    // console.log(userSelectedDate);\n  },\n};\n\n// Функія форматування часу з мілісекунд\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n\n// Прив\"язка інпута, кнопки, та селс оф штмл\nconst inputOfDate = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('#start-button');\nconst dataDays = document.querySelector('#dataDays');\nconst dataHours = document.querySelector('#dataHours');\nconst dataMinutes = document.querySelector('#dataMinutes');\nconst dataSeconds = document.querySelector('#dataSeconds');\n\n// Робимо кнопку старт не активною з початку\nstartButton.disabled = true;\n\n// Івент лістенер для кнопки старт\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  //Приводимо обєкт до 2х числовості\n  let objOfDate = convertMs(timeInMs);\n  addLeadingZero(objOfDate);\n  // Передача обєкту в штмл\n  dataDays.textContent = objOfDate.days;\n  dataHours.textContent = objOfDate.hours;\n  dataMinutes.textContent = objOfDate.minutes;\n  dataSeconds.textContent = objOfDate.seconds;\n});\n\n// Івент лістнер для інпута\ninputOfDate.addEventListener('change', () => {\n  userSelectedDate = new Date(inputOfDate.value);\n  dateValidityCheck();\n  timeInMs = userSelectedDate - options.defaultDate.getTime();\n});\n\n//Функція таймеру\nfunction counter() {\n  if (dataSeconds.textContent > 0) {\n    dataSeconds.textContent--;\n  } else if (dataMinutes.textContent > 0) {\n    dataMinutes.textContent--;\n    dataSeconds.textContent = 59;\n  } else if (dataHours.textContent > 0) {\n    dataHours.textContent--;\n    dataMinutes.textContent = 59;\n    dataSeconds.textContent = 59;\n  } else if (dataDays.textContent > 0) {\n    dataDays.textContent--;\n    dataHours.textContent = 23;\n    dataMinutes.textContent = 59;\n    dataSeconds.textContent = 59;\n  }\n\n  dataDays.textContent = dataDays.textContent.padStart(2, '0');\n  dataHours.textContent = dataHours.textContent.padStart(2, '0');\n  dataMinutes.textContent = dataMinutes.textContent.padStart(2, '0');\n  dataSeconds.textContent = dataSeconds.textContent.padStart(2, '0');\n\n  if (\n    dataDays === 0 &&\n    dataHours === 0 &&\n    dataMinutes === 0 &&\n    dataSeconds === 0\n  ) {\n    startButton.disabled = false;\n  }\n}\nconst timer = setInterval(counter, 1000);\n\n// Функія чеку валідності дати\nconst dateValidityCheck = () => {\n  if (userSelectedDate < options.defaultDate) {\n    startButton.disabled = true;\n    //window.alert('Please choose a date in the future');\n    iziToast.show({\n      color: 'red',\n      message: 'Please choose a date in the future.',\n      position: 'topCenter',\n    });\n  } else {\n    startButton.disabled = false;\n  }\n};\n\n// Функція перевірки на 2х числовість\nfunction addLeadingZero(obj) {\n  for (const key in obj) {\n    if (Object.hasOwnProperty.call(obj, key)) {\n      if (obj[key].toString().length < 2) {\n        obj[key] = obj[key].toString().padStart(2, '0');\n      }\n    }\n  }\n  console.log(obj);\n  return obj;\n}\n\ntimer;\nflatpickr(inputOfDate, options);\n"],"names":["userSelectedDate","timeInMs","options","selectedDates","convertMs","ms","days","hours","minutes","seconds","inputOfDate","startButton","dataDays","dataHours","dataMinutes","dataSeconds","objOfDate","addLeadingZero","dateValidityCheck","counter","iziToast","obj","key","flatpickr"],"mappings":"+IAOA,IAAIA,EAAmB,GACnBC,EAAW,GAGf,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,CAEnC,CACH,EAGA,SAASC,EAAUC,EAAI,CAKrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,MAAMC,EAAc,SAAS,cAAc,kBAAkB,EACvDC,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAW,SAAS,cAAc,WAAW,EAC7CC,EAAY,SAAS,cAAc,YAAY,EAC/CC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,cAAc,EAGzDJ,EAAY,SAAW,GAGvBA,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GAEvB,IAAIK,EAAYZ,EAAUH,CAAQ,EAClCgB,EAAeD,CAAS,EAExBJ,EAAS,YAAcI,EAAU,KACjCH,EAAU,YAAcG,EAAU,MAClCF,EAAY,YAAcE,EAAU,QACpCD,EAAY,YAAcC,EAAU,OACtC,CAAC,EAGDN,EAAY,iBAAiB,SAAU,IAAM,CAC3CV,EAAmB,IAAI,KAAKU,EAAY,KAAK,EAC7CQ,IACAjB,EAAWD,EAAmBE,EAAQ,YAAY,QAAO,CAC3D,CAAC,EAGD,SAASiB,GAAU,CACbJ,EAAY,YAAc,EAC5BA,EAAY,cACHD,EAAY,YAAc,GACnCA,EAAY,cACZC,EAAY,YAAc,IACjBF,EAAU,YAAc,GACjCA,EAAU,cACVC,EAAY,YAAc,GAC1BC,EAAY,YAAc,IACjBH,EAAS,YAAc,IAChCA,EAAS,cACTC,EAAU,YAAc,GACxBC,EAAY,YAAc,GAC1BC,EAAY,YAAc,IAG5BH,EAAS,YAAcA,EAAS,YAAY,SAAS,EAAG,GAAG,EAC3DC,EAAU,YAAcA,EAAU,YAAY,SAAS,EAAG,GAAG,EAC7DC,EAAY,YAAcA,EAAY,YAAY,SAAS,EAAG,GAAG,EACjEC,EAAY,YAAcA,EAAY,YAAY,SAAS,EAAG,GAAG,EAG/DH,IAAa,GACbC,IAAc,GACdC,IAAgB,GAChBC,IAAgB,IAEhBJ,EAAY,SAAW,GAE3B,CACc,YAAYQ,EAAS,GAAI,EAGvC,MAAMD,EAAoB,IAAM,CAC1BlB,EAAmBE,EAAQ,aAC7BS,EAAY,SAAW,GAEvBS,EAAS,KAAK,CACZ,MAAO,MACP,QAAS,sCACT,SAAU,WAChB,CAAK,GAEDT,EAAY,SAAW,EAE3B,EAGA,SAASM,EAAeI,EAAK,CAC3B,UAAWC,KAAOD,EACZ,OAAO,eAAe,KAAKA,EAAKC,CAAG,GACjCD,EAAIC,CAAG,EAAE,SAAQ,EAAG,OAAS,IAC/BD,EAAIC,CAAG,EAAID,EAAIC,CAAG,EAAE,SAAQ,EAAG,SAAS,EAAG,GAAG,GAIpD,eAAQ,IAAID,CAAG,EACRA,CACT,CAGAE,EAAUb,EAAaR,CAAO"}